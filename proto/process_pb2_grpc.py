# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import process_pb2 as proto_dot_process__pb2


class ProcessManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddProcess = channel.unary_unary(
                '/proto.ProcessManager/AddProcess',
                request_serializer=proto_dot_process__pb2.AddProcessRequest.SerializeToString,
                response_deserializer=proto_dot_process__pb2.Process.FromString,
                )
        self.StartProcess = channel.unary_unary(
                '/proto.ProcessManager/StartProcess',
                request_serializer=proto_dot_process__pb2.StartProcessRequest.SerializeToString,
                response_deserializer=proto_dot_process__pb2.Process.FromString,
                )
        self.StopProcess = channel.unary_unary(
                '/proto.ProcessManager/StopProcess',
                request_serializer=proto_dot_process__pb2.StopProcessRequest.SerializeToString,
                response_deserializer=proto_dot_process__pb2.StopProcessResponse.FromString,
                )
        self.FindProcess = channel.unary_unary(
                '/proto.ProcessManager/FindProcess',
                request_serializer=proto_dot_process__pb2.FindProcessRequest.SerializeToString,
                response_deserializer=proto_dot_process__pb2.Process.FromString,
                )
        self.DeleteProcess = channel.unary_unary(
                '/proto.ProcessManager/DeleteProcess',
                request_serializer=proto_dot_process__pb2.DeleteProcessRequest.SerializeToString,
                response_deserializer=proto_dot_process__pb2.DeleteProcessResponse.FromString,
                )
        self.ListProcess = channel.unary_unary(
                '/proto.ProcessManager/ListProcess',
                request_serializer=proto_dot_process__pb2.ListProcessRequest.SerializeToString,
                response_deserializer=proto_dot_process__pb2.ListProcessResponse.FromString,
                )
        self.SpawnProcess = channel.unary_unary(
                '/proto.ProcessManager/SpawnProcess',
                request_serializer=proto_dot_process__pb2.SpawnProcessRequest.SerializeToString,
                response_deserializer=proto_dot_process__pb2.SpawnProcessResponse.FromString,
                )


class ProcessManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpawnProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProcessManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProcess,
                    request_deserializer=proto_dot_process__pb2.AddProcessRequest.FromString,
                    response_serializer=proto_dot_process__pb2.Process.SerializeToString,
            ),
            'StartProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.StartProcess,
                    request_deserializer=proto_dot_process__pb2.StartProcessRequest.FromString,
                    response_serializer=proto_dot_process__pb2.Process.SerializeToString,
            ),
            'StopProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.StopProcess,
                    request_deserializer=proto_dot_process__pb2.StopProcessRequest.FromString,
                    response_serializer=proto_dot_process__pb2.StopProcessResponse.SerializeToString,
            ),
            'FindProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.FindProcess,
                    request_deserializer=proto_dot_process__pb2.FindProcessRequest.FromString,
                    response_serializer=proto_dot_process__pb2.Process.SerializeToString,
            ),
            'DeleteProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProcess,
                    request_deserializer=proto_dot_process__pb2.DeleteProcessRequest.FromString,
                    response_serializer=proto_dot_process__pb2.DeleteProcessResponse.SerializeToString,
            ),
            'ListProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProcess,
                    request_deserializer=proto_dot_process__pb2.ListProcessRequest.FromString,
                    response_serializer=proto_dot_process__pb2.ListProcessResponse.SerializeToString,
            ),
            'SpawnProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.SpawnProcess,
                    request_deserializer=proto_dot_process__pb2.SpawnProcessRequest.FromString,
                    response_serializer=proto_dot_process__pb2.SpawnProcessResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.ProcessManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProcessManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ProcessManager/AddProcess',
            proto_dot_process__pb2.AddProcessRequest.SerializeToString,
            proto_dot_process__pb2.Process.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ProcessManager/StartProcess',
            proto_dot_process__pb2.StartProcessRequest.SerializeToString,
            proto_dot_process__pb2.Process.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ProcessManager/StopProcess',
            proto_dot_process__pb2.StopProcessRequest.SerializeToString,
            proto_dot_process__pb2.StopProcessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ProcessManager/FindProcess',
            proto_dot_process__pb2.FindProcessRequest.SerializeToString,
            proto_dot_process__pb2.Process.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ProcessManager/DeleteProcess',
            proto_dot_process__pb2.DeleteProcessRequest.SerializeToString,
            proto_dot_process__pb2.DeleteProcessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ProcessManager/ListProcess',
            proto_dot_process__pb2.ListProcessRequest.SerializeToString,
            proto_dot_process__pb2.ListProcessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SpawnProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ProcessManager/SpawnProcess',
            proto_dot_process__pb2.SpawnProcessRequest.SerializeToString,
            proto_dot_process__pb2.SpawnProcessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
